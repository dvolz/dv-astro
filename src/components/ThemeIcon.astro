---
import { Icon } from 'astro-icon/components'
---

<button id="themeToggle" aria-label="Theme Toggle">
	<Icon
		name="heroicons-outline:sun"
		style="stroke: var(--text-color); stroke-width: .1;"
		class="sun"
	/>
	<Icon
		name="heroicons-outline:moon"
		style="stroke: var(--text-color); stroke-width: .1;"
		class="moon"
	/>
</button>

<style lang="scss">
	#themeToggle {
		border: 0;
		background: none;
		position: relative;
		cursor: pointer;
		transform: translateY(0.6rem);
	}
	$svg-size: 3rem;
	svg {
		transition: all 0.3s ease;
	}
	$svg-size: 3.5rem;
	.sun {
		color: var(--text-color);
		position: absolute;
		top: 0rem;
		left: 0;
		opacity: 1;
		width: $svg-size;
		height: $svg-size;
	}
	$svg-size: 3rem;
	.moon {
		color: transparent;
		opacity: 0;
		width: $svg-size;
		height: $svg-size;
	}

	:global(.dark) .sun {
		color: transparent;
		opacity: 0;
	}
	:global(.dark) .moon {
		color: var(--text-color);
		opacity: 1;
	}
</style>

<script is:inline>
	const applyTheme = () => {
		const isDark = localStorage.theme === 'dark'
		const root = document.documentElement
		const body = document.body

		// Update CSS variables for dark and light theme
		if (isDark) {
			// Dark theme values
			body.style.setProperty('--text-color', '#fff7f2')
			body.style.setProperty('--background-color', '#332e2e')
			body.style.setProperty('--link-color', '#c3eeff')
			body.style.setProperty('--link-hover', '#fff')
			root.classList.add('dark')
		} else {
			// Light theme values
			body.style.setProperty('--text-color', '#332e2e')
			body.style.setProperty('--background-color', '#fff7f2')
			body.style.setProperty('--link-color', '#568091')
			body.style.setProperty('--link-hover', '#29435c')
		}
	}

	// Get the theme from localStorage or the system preference
	const theme = (() => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme')
		}
		if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
			return 'dark'
		}
		return 'light'
	})()

	// Apply the initial theme
	applyTheme()

	// Store the initial theme in localStorage
	window.localStorage.setItem('theme', theme)

	// Toggle theme on button click
	const handleToggleClick = () => {
		const element = document.documentElement
		element.classList.toggle('dark')

		const isDark = element.classList.contains('dark')
		localStorage.setItem('theme', isDark ? 'dark' : 'light')

		// Apply updated theme when toggled
		applyTheme()
	}

	document
		.getElementById('themeToggle')
		.addEventListener('click', handleToggleClick)
</script>
